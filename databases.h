typedef struct {
	struct {
	        struct {
	                char res:3;
	                char find:1;
	                char res1:1;
	                char ir:1;
	                char res2:1;
	                char track:1;
	                char err;
	                INT16 azi;
	                INT16 pit;
	                UINT16 laser;
	                UINT16 stamp;
	        } __attribute__((packed)) ir;
	        struct {
	                char res:4;
	                char mov:1;
	                char res1:3;
	                char err;
	                INT16 azi;
	                INT16 pit;
	                INT16 res2;
	                UINT16 stamp;
	        } __attribute__((packed)) sv;
	        struct {
	                char num;
	                char res1:5;
	                char ajc:1;
	                char tail:1;
	                char mod:1;
	                char res2;
	                char exist:1;
	                char cut:1;
	                char pin0:1;
	                char pin1:1;
	                char ready:1;
	                char safe:1;
	                char regret:1;
	                char res3:1;
	                char res4:4;
	                char battery:1;
	                char feedback:1;
	                char res5:1;
	                char engine:1;
	                struct {
	                        char core:1;
	                        char p20:1;
	                        char n20:1;
	                        char pin:1;
	                        char top:1;
	                        char timeout:1;
	                        char res:1;
	                        char dumb:1;
	                } err;
	                char res6;
	                char gas;
	                UINT16 stamp;
	        } m[8];
	        struct {
	                char sv1:1;
	                char sv2:1;
	                char get:1;
	                char guide:1;
	                char pos:1;
	                char num:3;
	                char m8:1;
	                char m7:1;
	                char m6:1;
	                char m5:1;
	                char m4:1;
	                char m3:1;
	                char m2:1;
	                char m1:1;
	                char launch:1;
	                char safe:1;
	                char cage:1;
	                char chk:1;
	                char rst:1;
	                char ajc:1;
	                char tail:1;
	                char mod:1;
	                char rkra;
	                char rkrp;
	                char laser5hz:1;
	                char laser1hz:1;
	                char background:1;
	                char shutter:1;
	                char ir:1;
	                char whiteblack:1;
	                char backmid:1;
	                char channel:1;
	                char res:1;
	                char display:1;
	                char ccdzoomsub:1;
	                char ccdzoomplus:1;
	                char ccdfocussub:1;
	                char ccdfocusplus:1;
	                char irfocussub:1;
	                char irfocusplus:1;
	                char res1;
	                UINT16 stamp1;
	                char stp1l;
	                char stp1r;
	                char fbd1l;
	                char fbd1r;
	                char fbd2l;
	                char fbd2r;
	                INT16 heading;
	                UINT16 stamp2;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 alt;
	                UINT16 stamp3;
	        } __attribute__((packed)) dp;
	        struct {
	                double week;
	                double time;
	                double heading;
	                double pit;
	                double track;
	                double lat;
	                double lon;
	                double alt;
	                double ve;
	                double vn;
	                double vu;
	                double baseline;
	                double nsv1;
	                double nsv2;
	        } gps;
	        struct {
	                char flag;
	                char num;
	                char tgtnum;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 hgt;
	                char vx;
	                char vy;
	                char vz;
	                UINT16 stamp;
	                char xor;
	        } __attribute__((packed)) acs;
	} r;
	struct {
	        struct {
	                char res:5;
	                char ir:1;
	                char get:1;
	                char res1:1;
	                char res2;
	                INT16 azi;
	                INT16 pit;
	                INT16 res3;
	        } __attribute__((packed)) ir;
	        struct {
	                char res:4;
	                char sv:1;
	                char res1:3;
	                char res2;
	                INT16 azi;
	                INT16 pit;
	                INT16 res3;
	        } __attribute__((packed)) sv;
	        struct {
	                char umask;
	                char res:5;
	                char ajc:1;
	                char tail:1;
	                char mod:1;
	                UINT32 cmd;
	                char res1;
	                char ctr;
	        } __attribute__((packed)) m;
	        char pw[8];
	        struct {
	                char spd:6;
	                char direct:1;
	                char attack:1;
	                char remain;
	                INT16 hgt;
	                UINT16 dist;
	                INT16 ppi;
	                char stp1l;
	                char stp1r;
	                char fbd1l;
	                char fbd1r;
	                char fbd2l;
	                char fbd2r;
	                INT16 heading;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 alt;
	        } __attribute__((packed)) dp;
	        struct {
	                char head;
	                char len;
	                char ctr;
	                char errm:1;
	                char errsv:1;
	                char errir:1;
	                char attack:1;
	                char num:4;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 alt;
	                UINT16 mls;
	                char stp1l;
	                char stp1r;
	                char fbd1l;
	                char fbd1r;
	                char fbd2l;
	                char fbd2r;
	                INT16 ppi;
	                char end;
	                char xor;
	        } __attribute__((packed)) acs;
	} t;
} FCSD;

typedef struct {
	struct {
	        struct {
	                char stp:1;
	                char fbd:1;
	                char ir:1;
	                char get:1;
	                char laser:1;
	                char freq:1;
	                char res:2;
	                INT16 azi;
	                INT16 pit;
	        } __attribute__((packed)) ir;
	        struct {
	                char stp:1;
	                char fbd:1;
	                char sv1:1;
	                char sv2:1;
	                char ahead:1;
	                char res:3;
	                INT16 azi;
	                INT16 pit;
	        } __attribute__((packed)) sv;
	        struct {
	                char direct:1;
	                char attack:1;
	                char res:6;
	                UINT8 remain;
	                UINT16 shortcut;
	                UINT16 dist;
	        } __attribute__((packed)) guide;
	} r;
	struct {
	        struct {
	                UINT16 stamp;
	                char err;
	                char find:1;
	                char track:1;
	                char freq:1;
	                char res:5;
	                INT16 azi;
	                INT16 pit;
	                UINT16 laser;
	        } __attribute__((packed)) ir;
	        struct {
	                UINT16 stamp;
	                char err;
	                char stop:1;
	                char mov:1;
	                char res:6;
	                INT16 azi;
	                INT16 pit;
	        } __attribute__((packed)) sv;
	        struct {
	                char err;
	                char ready;
	        } m;
	        struct {
	                char pos:1;
	                char guide:1;
	                char ir:1;
	                char get:1;
	                char laser:1;
	                char freq:1;
	                char sv1:1;
	                char sv2:1;
	                char rkra;
	                char rkrp;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 alt;
	                INT16 heading;
	                char stp1l;
	                char stp1r;
	                char fbd1l;
	                char fbd1r;
	                char fbd2l;
	                char fbd2r;
	        } __attribute__((packed)) dp;
	        struct {
	                UINT16 stamp;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 alt;
	                INT16 heading;
	        } __attribute__((packed)) gps;
	        struct {
	                UINT16 stamp;
	                UINT32 lat:23;
	                char ns:1;
	                UINT32 lon:23;
	                char ew:1;
	                INT16 hgt;
	                char vx;
	                char vy;
	                char vz;
	        } __attribute__((packed)) acs;
	} t;
} ETSD;

typedef struct {
	struct {
	        char umask;
	        struct {
	                char mod:1;
	                char tail:1;
	                char ajc:1;
	                char rst:1;
	                char chk:1;
	                char up:1;
	                char cage:1;
	                char safe:1;
	                char launch:1;
	                char res:7;
	        } m[8];
	} r;
	struct {
	        struct {
	                char svstp:1;
	                char svfbd:1;
	                char ahead:1;
	                char res:5;
	        } ets;
	        struct {
	                struct {
	                        char core:1;
	                        char p20:1;
	                        char n20:1;
	                        char pin:1;
	                        char top:1;
	                        char timeout:1;
	                        char res:1;
	                        char dumb:1;
	                } err;
	                char mod:1;
	                char tail:1;
	                char ajc:1;
	                char exist:1;
	                char cut:1;
	                char pin0:1;
	                char pin1:1;
	                char ready:1;
	                char safe:1;
	                char regret:1;
	                char battery:1;
	                char feedback:1;
	                char engine:1;
	                char res:3;
	                char gas;
	        } m[8];
	        struct {
	                char m1:1;
	                char m2:1;
	                char m3:1;
	                char m4:1;
	                char m5:1;
	                char m6:1;
	                char m7:1;
	                char m8:1;
	                char mod:1;
	                char tail:1;
	                char ajc:1;
	                char chk:1;
	                char cage:1;
	                char safe:1;
	                char launch:1;
	                char rst:1;
	        } dp;
	} t;
} MLSD;
